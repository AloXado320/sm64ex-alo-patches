diff --git a/actors/tree/geo.inc.c b/actors/tree/geo.inc.c
index c58ded6..4630171 100644
--- a/actors/tree/geo.inc.c
+++ b/actors/tree/geo.inc.c
@@ -1,44 +1,59 @@
 // 0x16000FE8
 const GeoLayout bubbly_tree_geo[] = {
+   GEO_SHADOW(SHADOW_CIRCLE_4_VERTS, 0xA0, 400),
+   GEO_OPEN_NODE(),
    GEO_CULLING_RADIUS(800),
    GEO_OPEN_NODE(),
       GEO_DISPLAY_LIST(LAYER_ALPHA, tree_seg3_dl_0302FEE8),
    GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
    GEO_END(),
 };
 
 // 0x16001000
 const GeoLayout spiky_tree_geo[] = {
+   GEO_SHADOW(SHADOW_SPIKE, 0xA0, 240),
+   GEO_OPEN_NODE(),
    GEO_CULLING_RADIUS(800),
    GEO_OPEN_NODE(),
       GEO_DISPLAY_LIST(LAYER_ALPHA, tree_seg3_dl_03030FA0),
    GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
    GEO_END(),
 };
 
 // 0x16001018
 const GeoLayout snow_tree_geo[] = {
+   GEO_SHADOW(SHADOW_SPIKE, 0x50, 240),
+   GEO_OPEN_NODE(),
    GEO_CULLING_RADIUS(800),
    GEO_OPEN_NODE(),
       GEO_DISPLAY_LIST(LAYER_ALPHA, tree_seg3_dl_03032088),
    GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
    GEO_END(),
 };
 
 // 0x16001030
 const GeoLayout spiky_tree1_geo[] = {
+   GEO_SHADOW(SHADOW_SPIKE, 0xA0, 240),
+   GEO_OPEN_NODE(),
    GEO_CULLING_RADIUS(800),
    GEO_OPEN_NODE(),
       GEO_DISPLAY_LIST(LAYER_ALPHA, tree_seg3_dl_03032170),
    GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
    GEO_END(),
 };
 
 // 0x16001048
 const GeoLayout palm_tree_geo[] = {
+   GEO_SHADOW(SHADOW_SPIKE, 0xA0, 240),
+   GEO_OPEN_NODE(),
    GEO_CULLING_RADIUS(800),
    GEO_OPEN_NODE(),
       GEO_DISPLAY_LIST(LAYER_ALPHA, tree_seg3_dl_03033258),
    GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
    GEO_END(),
 };
diff --git a/bin/segment2.c b/bin/segment2.c
index a762900..625cd0a 100644
--- a/bin/segment2.c
+++ b/bin/segment2.c
@@ -2452,6 +2452,10 @@ ALIGNED8 static const Texture texture_shadow_quarter_square[] = {
 #include "textures/segment2/shadow_quarter_square.ia8.inc.c"
 };
 
+ALIGNED8 static const Texture texture_shadow_spike[] = {
+#include "textures/segment2/custom/shadow_spike_custom.ia8.inc.c"
+};
+
 const Texture texture_transition_star_half[] = {
 #include "textures/segment2/segment2.0F458.ia8.inc.c"
 };
@@ -2566,6 +2570,12 @@ const Gfx dl_shadow_square[] = {
     gsSPEndDisplayList(),
 };
 
+const Gfx dl_shadow_spike[] = {
+    gsSPDisplayList(dl_shadow_begin),
+    gsDPLoadTextureBlock(texture_shadow_spike, G_IM_FMT_IA, G_IM_SIZ_8b, 16, 16, 0, G_TX_WRAP | G_TX_MIRROR, G_TX_WRAP | G_TX_MIRROR, 4, 4, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPEndDisplayList(),
+};
+
 // 0x020145D8 - 0x02014620
 const Gfx dl_shadow_9_verts[] = {
     gsSP2Triangles( 0,  3,  4, 0x0,  0,  4,  1, 0x0),
diff --git a/levels/bob/areas/1/geo.inc.c b/levels/bob/areas/1/geo.inc.c
index c7c6fc2..d6b1eb6 100644
--- a/levels/bob/areas/1/geo.inc.c
+++ b/levels/bob/areas/1/geo.inc.c
@@ -17,7 +17,7 @@ const GeoLayout bob_geo_000488[] = {
             GEO_OPEN_NODE(),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, bob_seg7_dl_07004390),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, bob_seg7_dl_07009D80),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, bob_seg7_dl_0700A470),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, bob_seg7_dl_0700A470),
                GEO_DISPLAY_LIST(LAYER_ALPHA, bob_seg7_dl_0700A920),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, bob_seg7_dl_0700DD18),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, bob_seg7_dl_0700E338),
diff --git a/levels/castle_courtyard/areas/1/geo.inc.c b/levels/castle_courtyard/areas/1/geo.inc.c
index 1d1d1de..fae4282 100644
--- a/levels/castle_courtyard/areas/1/geo.inc.c
+++ b/levels/castle_courtyard/areas/1/geo.inc.c
@@ -16,7 +16,7 @@ const GeoLayout castle_courtyard_geo_000218[] = {
             GEO_CAMERA(16, 0, 2000, 6000, 0, 0, 0, geo_camera_main),
             GEO_OPEN_NODE(),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_courtyard_seg7_dl_070048B8),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, castle_courtyard_seg7_dl_07005698),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, castle_courtyard_seg7_dl_07005698),
                GEO_DISPLAY_LIST(LAYER_ALPHA, castle_courtyard_seg7_dl_07005938),
                GEO_ASM(   0, geo_movtex_pause_control),
                GEO_ASM(0x2601, geo_movtex_draw_water_regions),
diff --git a/levels/castle_grounds/areas/1/geo.inc.c b/levels/castle_grounds/areas/1/geo.inc.c
index 9623394..864726d 100644
--- a/levels/castle_grounds/areas/1/geo.inc.c
+++ b/levels/castle_grounds/areas/1/geo.inc.c
@@ -18,7 +18,7 @@ const GeoLayout castle_grounds_geo_00073C[] = {
                GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_seg7_dl_07006D70),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_seg7_dl_070095F0),
                GEO_DISPLAY_LIST(LAYER_ALPHA, castle_grounds_seg7_dl_0700A860),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, castle_grounds_seg7_dl_0700B1D0),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, castle_grounds_seg7_dl_0700B1D0),
                GEO_DISPLAY_LIST(LAYER_ALPHA, castle_grounds_seg7_dl_0700BA20),
                GEO_DISPLAY_LIST(LAYER_OPAQUE_DECAL, castle_grounds_seg7_dl_0700C430),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_seg7_dl_0700C210),
diff --git a/levels/ccm/areas/1/5/model.inc.c b/levels/ccm/areas/1/5/model.inc.c
index 96650af..a550a0e 100644
--- a/levels/ccm/areas/1/5/model.inc.c
+++ b/levels/ccm/areas/1/5/model.inc.c
@@ -175,7 +175,7 @@ const Gfx ccm_seg7_dl_0700DDF0[] = {
     gsDPTileSync(),
     gsDPSetTile(G_IM_FMT_IA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
     gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsSPDisplayList(ccm_seg7_dl_0700DC18),
+    //gsSPDisplayList(ccm_seg7_dl_0700DC18),
     gsSPDisplayList(ccm_seg7_dl_0700DD28),
     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
     gsDPPipeSync(),
diff --git a/levels/sl/areas/1/geo.inc.c b/levels/sl/areas/1/geo.inc.c
index 0631851..d82cf57 100644
--- a/levels/sl/areas/1/geo.inc.c
+++ b/levels/sl/areas/1/geo.inc.c
@@ -20,7 +20,7 @@ const GeoLayout sl_geo_0003A8[] = {
                GEO_DISPLAY_LIST(LAYER_OPAQUE, sl_seg7_dl_070073D0),
                GEO_DISPLAY_LIST(LAYER_ALPHA, sl_seg7_dl_07007880),
                GEO_DISPLAY_LIST(LAYER_TRANSPARENT, sl_seg7_dl_070088B0),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, sl_seg7_dl_07008D58),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, sl_seg7_dl_07008D58),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, sl_seg7_dl_0700A5A0),
                GEO_ASM(   0, geo_movtex_pause_control),
                GEO_ASM(0x1001, geo_movtex_draw_water_regions),
diff --git a/levels/ssl/areas/1/geo.inc.c b/levels/ssl/areas/1/geo.inc.c
index 08ca901..e471f67 100644
--- a/levels/ssl/areas/1/geo.inc.c
+++ b/levels/ssl/areas/1/geo.inc.c
@@ -18,7 +18,7 @@ const GeoLayout ssl_geo_000648[] = {
                GEO_DISPLAY_LIST(LAYER_OPAQUE, ssl_seg7_dl_07009F48),
                GEO_DISPLAY_LIST(LAYER_OPAQUE, ssl_seg7_dl_0700BA78),
                GEO_DISPLAY_LIST(LAYER_ALPHA, ssl_seg7_dl_0700BC18),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, ssl_seg7_dl_0700BD00),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, ssl_seg7_dl_0700BD00),
                GEO_ASM(0x0801, geo_movtex_update_horizontal),
                GEO_ASM(   0, geo_movtex_pause_control),
                GEO_ASM(0x0801, geo_movtex_draw_water_regions),
diff --git a/levels/thi/areas/1/geo.inc.c b/levels/thi/areas/1/geo.inc.c
index d08e130..114723d 100644
--- a/levels/thi/areas/1/geo.inc.c
+++ b/levels/thi/areas/1/geo.inc.c
@@ -19,7 +19,7 @@ const GeoLayout thi_geo_000608[] = {
                GEO_DISPLAY_LIST(LAYER_OPAQUE, thi_seg7_dl_07006968),
                GEO_DISPLAY_LIST(LAYER_ALPHA, thi_seg7_dl_07007008),
                GEO_DISPLAY_LIST(LAYER_TRANSPARENT, thi_seg7_dl_070072E8),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, thi_seg7_dl_070073C0),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, thi_seg7_dl_070073C0),
                GEO_ASM(   0, geo_movtex_pause_control),
                GEO_ASM(0x1301, geo_movtex_draw_water_regions),
                GEO_RENDER_OBJ(),
diff --git a/levels/thi/areas/2/geo.inc.c b/levels/thi/areas/2/geo.inc.c
index eefb745..1f767b3 100644
--- a/levels/thi/areas/2/geo.inc.c
+++ b/levels/thi/areas/2/geo.inc.c
@@ -24,7 +24,7 @@ const GeoLayout thi_geo_0006D4[] = {
                   GEO_DISPLAY_LIST(LAYER_ALPHA, thi_seg7_dl_07007008),
                   GEO_DISPLAY_LIST(LAYER_TRANSPARENT, thi_seg7_dl_070072E8),
                GEO_CLOSE_NODE(),
-               GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, thi_seg7_dl_07007538),
+               //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, thi_seg7_dl_07007538),
                GEO_ASM(   0, geo_movtex_pause_control),
                GEO_ASM(0x1302, geo_movtex_draw_water_regions),
                GEO_RENDER_OBJ(),
diff --git a/levels/wf/areas/1/15/geo.inc.c b/levels/wf/areas/1/15/geo.inc.c
index 6e73e6a..2eeb53f 100644
--- a/levels/wf/areas/1/15/geo.inc.c
+++ b/levels/wf/areas/1/15/geo.inc.c
@@ -5,7 +5,7 @@ const GeoLayout wf_geo_000958[] = {
       GEO_RENDER_RANGE(-2000, 8000),
       GEO_OPEN_NODE(),
          GEO_DISPLAY_LIST(LAYER_OPAQUE, wf_seg7_dl_0700ABA0),
-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, wf_seg7_dl_0700AFB8),
+         //GEO_DISPLAY_LIST(LAYER_TRANSPARENT_DECAL, wf_seg7_dl_0700AFB8),
       GEO_CLOSE_NODE(),
       GEO_RENDER_RANGE(8000, 20000),
       GEO_OPEN_NODE(),
diff --git a/src/game/segment2.h b/src/game/segment2.h
index 7eecce5..0129c80 100644
--- a/src/game/segment2.h
+++ b/src/game/segment2.h
@@ -25,6 +25,7 @@ extern Gfx dl_screen_transition_end[];
 extern Gfx dl_transition_draw_filled_region[];
 extern Gfx dl_shadow_circle[];
 extern Gfx dl_shadow_square[];
+extern Gfx dl_shadow_spike[];
 extern Gfx dl_shadow_9_verts[];
 extern Gfx dl_shadow_4_verts[];
 extern Gfx dl_shadow_end[];
diff --git a/src/game/shadow.c b/src/game/shadow.c
index c0b7b08..8eaa12e 100644
--- a/src/game/shadow.c
+++ b/src/game/shadow.c
@@ -73,6 +73,8 @@ struct Shadow {
  */
 #define SHADOW_SHAPE_SQUARE 20
 
+#define SHADOW_SHAPE_SPIKE 30
+
 /**
  * Constant to indicate a shadow consists of 9 vertices.
  */
@@ -478,7 +480,11 @@ void add_shadow_to_display_list(Gfx *displayListHead, Vtx *verts, s8 shadowVerte
             gSPDisplayList(displayListHead++, dl_shadow_circle);
             break;
         case SHADOW_SHAPE_SQUARE:
-            gSPDisplayList(displayListHead++, dl_shadow_square) break;
+            gSPDisplayList(displayListHead++, dl_shadow_square);
+            break;
+        case SHADOW_SHAPE_SPIKE:
+            gSPDisplayList(displayListHead++, dl_shadow_spike);
+            break;
     }
     switch (shadowVertexType) {
         case SHADOW_WITH_9_VERTS:
@@ -702,6 +708,33 @@ Gfx *create_shadow_circle_4_verts(f32 xPos, f32 yPos, f32 zPos, s16 shadowScale,
     return displayList;
 }
 
+/**
+ * Create a spike shadow composed of 4 vertices.
+ */
+Gfx *create_shadow_spike(f32 xPos, f32 yPos, f32 zPos, s16 shadowScale, u8 solidity) {
+    Vtx *verts;
+    Gfx *displayList;
+    struct Shadow shadow;
+    s32 i;
+
+    if (init_shadow(&shadow, xPos, yPos, zPos, shadowScale, solidity) != 0) {
+        return NULL;
+    }
+
+    verts = alloc_display_list(4 * sizeof(Vtx));
+    displayList = alloc_display_list(5 * sizeof(Gfx));
+
+    if (verts == NULL || displayList == NULL) {
+        return 0;
+    }
+
+    for (i = 0; i < 4; i++) {
+        make_shadow_vertex(verts, i, shadow, SHADOW_WITH_4_VERTS);
+    }
+    add_shadow_to_display_list(displayList, verts, SHADOW_WITH_4_VERTS, SHADOW_SHAPE_SPIKE);
+    return displayList;
+}
+
 /**
  * Create a circular shadow composed of 4 vertices and assume that the ground
  * underneath it is totally flat.
@@ -880,9 +913,8 @@ Gfx *create_shadow_below_xyz(f32 xPos, f32 yPos, f32 zPos, s16 shadowScale, u8 s
         case SHADOW_CIRCLE_4_VERTS:
             displayList = create_shadow_circle_4_verts(xPos, yPos, zPos, shadowScale, shadowSolidity);
             break;
-        case SHADOW_CIRCLE_4_VERTS_FLAT_UNUSED: // unused shadow type
-            displayList = create_shadow_circle_assuming_flat_ground(xPos, yPos, zPos, shadowScale,
-                                                                    shadowSolidity);
+        case SHADOW_SPIKE:
+            displayList = create_shadow_spike(xPos, yPos, zPos, shadowScale, shadowSolidity);
             break;
         case SHADOW_SQUARE_PERMANENT:
             displayList =
diff --git a/src/game/shadow.h b/src/game/shadow.h
index 36b3ef0..051a678 100644
--- a/src/game/shadow.h
+++ b/src/game/shadow.h
@@ -12,7 +12,7 @@ enum ShadowType
 {
     SHADOW_CIRCLE_9_VERTS = 0,
     SHADOW_CIRCLE_4_VERTS = 1,
-    SHADOW_CIRCLE_4_VERTS_FLAT_UNUSED = 2,
+    SHADOW_SPIKE = 2,
     SHADOW_SQUARE_PERMANENT = 10,
     SHADOW_SQUARE_SCALABLE = 11,
     SHADOW_SQUARE_TOGGLABLE = 12,
diff --git a/textures/segment2/custom/shadow_spike_custom.ia8.png b/textures/segment2/custom/shadow_spike_custom.ia8.png
new file mode 100644
index 0000000000000000000000000000000000000000..1972b5fa862255c6d43c91b6924a8a1296f4ed4b
GIT binary patch
literal 256
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!61|;P_|4#%`$30yfLn>}1rz9l&IPbvn;K2h2
z@v8rikMk?KCGi|sCfRYgf$fdr@rJ7oF^pGg_>U+aWtecRWWllTCyH2j9X826d2;o|
zrzH{vVi^sbo@@!6HWS3t1XCHr&PK#GCNl8#o?uYbdBCQS$<n$>L5?|%k=LVLn&C>v
z8>R{WwHkIXcU&%zVDM|)!4uG?DzKnJV?q(*qks}|#;XQN#tEhYN<7{PT8^>IMn0Uc
zTDeM?9sZTEdd*Q4X?nqsav+w?<Ig+AP-7i24JHP?_0fXukL0<5USjZc^>bP0l+XkK
Dq&rx-

literal 0
HcmV?d00001

